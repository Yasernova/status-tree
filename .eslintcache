[{"/Users/adiza/Desktop/status-tree/src/reportWebVitals.js":"1","/Users/adiza/Desktop/status-tree/src/App.js":"2","/Users/adiza/Desktop/status-tree/src/treeHelpers/acts.js":"3","/Users/adiza/Desktop/status-tree/src/treeHelpers/getActivitiesMap.js":"4","/Users/adiza/Desktop/status-tree/src/treeHelpers/arrify.js":"5","/Users/adiza/Desktop/status-tree/src/treeHelpers/DrawTree.js":"6","/Users/adiza/Desktop/status-tree/src/treeHelpers/getCurrentPointsIndx.js":"7","/Users/adiza/Desktop/status-tree/src/ErrorBoundary.js":"8"},{"size":362,"mtime":1610669857907,"results":"9","hashOfConfig":"10"},{"size":1378,"mtime":1610705716850,"results":"11","hashOfConfig":"10"},{"size":64459,"mtime":1610670796423,"results":"12","hashOfConfig":"10"},{"size":482,"mtime":1610670796430,"results":"13","hashOfConfig":"10"},{"size":58,"mtime":1610670796425,"results":"14","hashOfConfig":"10"},{"size":2552,"mtime":1610672649654,"results":"15","hashOfConfig":"10"},{"size":615,"mtime":1610670796434,"results":"16","hashOfConfig":"10"},{"size":946,"mtime":1610705767987,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ubfa5p",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adiza/Desktop/status-tree/src/reportWebVitals.js",[],["36","37"],"/Users/adiza/Desktop/status-tree/src/App.js",[],"/Users/adiza/Desktop/status-tree/src/treeHelpers/acts.js",["38"],"/Users/adiza/Desktop/status-tree/src/treeHelpers/getActivitiesMap.js",[],"/Users/adiza/Desktop/status-tree/src/treeHelpers/arrify.js",[],"/Users/adiza/Desktop/status-tree/src/treeHelpers/DrawTree.js",["39"],"import React, { useMemo, useEffect } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider, Background, Controls, useStore, useZoomPanHelper,\n} from 'react-flow-renderer';\nimport draw from './dagree';\nimport acts, { history } from './acts';\n\nfunction nodeUI(activityName, isDone) {\n  return (\n    <span className={`${isDone ? 'shadow-md' : ''}`}>\n      {activityName}\n    </span>\n  );\n}\n\nfunction DrawTree() {\n  // متربطش القافله بأكتيفتى ريجيكتد\n  // لما تجيب الراوتس المشتركة استخدم اللى اخرهم مش ريجيكتيد لو مفيش استخدم اللى معاك\n  const branchesStatuses = {\n    nyaba: '14',\n    mror: '215',\n  };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const [g, currentIndexs] = useMemo(() => draw(acts, history, branchesStatuses), []);\n  const elements = useMemo(() => [\n    g.nodes().map(id => ({\n      id,\n      data: { label: nodeUI(acts[id].activityName, g.node(id).isDone) },\n      position: { x: g.node(id).x, y: g.node(id).y },\n      style: g.node(id).isDone\n        ? { backgroundColor: 'rgba(20, 184, 166)', color: 'white', border: 'none' }\n        : { backgroundColor: 'white', color: 'black', border: '1px solid #444' }\n    })),\n    g.edges().map(({ v, w }) => ({\n      id: `e${v}${w}`, source: v, target: w, arrowHeadType: 'arrowclosed', type: 'smoothstep',\n    })),\n  ].flat(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n  const store = useStore();\n  const { transform } = useZoomPanHelper();\n  useEffect(() => {\n    const { nodes, width } = store.getState();\n    if (nodes.length) {\n      const node = nodes[0];\n      const x = width / 2 - (node.__rf.position.x + node.__rf.width / 2);\n      const zoom = 1;\n      transform({ x, y: 0, zoom });\n    }\n  }, [currentIndexs, store, transform]);\n  const graphStyles = { width: \"100%\", height: \"600px\" };\n  return (\n    <div className=\"p-10\">\n      <div dir=\"ltr\" className=\"shadow-lg rounded-lg h-600px\">\n        <ReactFlow\n          style={graphStyles}\n          arrowHeadColor=\"#94a3b8\"\n          elements={elements}\n          elementsSelectable\n          nodesConnectable={false}\n          nodesDraggable={false}\n          zoomOnScroll\n          zoomOnDoubleClick\n          paneMoveable\n          snapToGrid\n          maxZoom=\"1\"\n        >\n          <Background />\n          <Controls showInteractive={false} showFitView={false} />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n}\n\nexport default () => <ReactFlowProvider><DrawTree /></ReactFlowProvider>;\n","/Users/adiza/Desktop/status-tree/src/treeHelpers/getCurrentPointsIndx.js",[],"/Users/adiza/Desktop/status-tree/src/ErrorBoundary.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":1,"nodeType":"46","endLine":1290,"endColumn":3},{"ruleId":"44","severity":1,"message":"47","line":76,"column":1,"nodeType":"46","endLine":76,"endColumn":74},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]